---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-operator
rules:
# Framework: knowing which other operators are running (i.e. peering).
- apiGroups: [squonk.it]
  resources: [datamanagerjobs]
  verbs: [list, watch, patch, get]
# Framework: runtime observation of namespaces & CRDs (addition/deletion).
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [list, watch]
- apiGroups: ['']
  resources: [namespaces, pods]
  verbs: [list, watch]
# Framework: admission webhook configuration management.
- apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1]
  resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
  verbs: [create, patch]
# Framework: posting the events about the handlers progress/errors.
- apiGroups: ['']
  resources: [events]
  verbs: [create]
# Application: other resources it produces and manipulates.
# Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
- apiGroups: [batch, extensions]
  resources: [jobs]
  verbs: [create]
- apiGroups: ['']
  resources: [pods, configmaps]
  verbs: [get, list, watch, create, delete]
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames: ['{{ jo_sa_psp }}']

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: job-operator
subjects:
- kind: ServiceAccount
  name: job-operator
  namespace: {{ jo_namespace }}
